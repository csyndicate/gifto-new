{"version":3,"file":"../column.js","sources":["column.js"],"sourcesContent":["(\n\tfunction( $ ) {\n\t\t'use strict';\n\n\t\tclass MinimogCollapsibleHandler extends elementorModules.frontend.handlers.Base {\n\t\t\tgetDefaultSettings() {\n\t\t\t\treturn {\n\t\t\t\t\tselectors: {\n\t\t\t\t\t\tcontainer: '.elementor-column-wrap',\n\t\t\t\t\t\tcontent: '.elementor-widget-wrap',\n\t\t\t\t\t},\n\t\t\t\t\tclasses: {\n\t\t\t\t\t\tisActive: 'tm-collapsible--active',\n\t\t\t\t\t\tisOpen: 'tm-collapsible--open',\n\t\t\t\t\t},\n\t\t\t\t\tspeed: 300,\n\t\t\t\t\tprevDevice: '',\n\t\t\t\t\tisDomOptimized: elementorFrontend.config.experimentalFeatures.hasOwnProperty( 'e_dom_optimization' ) && elementorFrontend.config.experimentalFeatures.e_dom_optimization\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tgetDefaultElements() {\n\n\t\t\t}\n\n\t\t\ttoggle( refresh ) {\n\t\t\t\tvar elementSettings   = this.getElementSettings(),\n\t\t\t\t    currentDeviceMode = elementorFrontend.getCurrentDeviceMode(),\n\t\t\t\t    activeDevices     = elementSettings.tm_collapsible_on;\n\n\t\t\t\tif ( elementSettings.prevDevice !== currentDeviceMode ) {\n\t\t\t\t\tif ( - 1 !== activeDevices.indexOf( currentDeviceMode ) ) {\n\t\t\t\t\t\tif ( true === refresh ) {\n\t\t\t\t\t\t\tthis.reactivate();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.activate();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.deactivate();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\telementSettings.prevDevice = currentDeviceMode;\n\t\t\t}\n\n\t\t\tactivate() {\n\t\t\t\tvar elementSettings = this.getElementSettings();\n\t\t\t\tconst classes       = this.getSettings( 'classes' );\n\n\t\t\t\tthis.$element.addClass( classes.isActive );\n\n\t\t\t\tif ( 'open' === elementSettings.tm_collapsible_status && this.$element.hasClass( classes.isActive ) ) {\n\t\t\t\t\tthis.elements.$content.show();\n\t\t\t\t\tthis.$element.addClass( classes.isOpen );\n\t\t\t\t} else {\n\t\t\t\t\tthis.elements.$content.hide();\n\t\t\t\t\tthis.$element.removeClass( classes.isOpen );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdeactivate() {\n\t\t\t\tconst classes = this.getSettings( 'classes' );\n\n\t\t\t\tthis.$element.removeClass( classes.isActive );\n\t\t\t\tthis.$element.removeClass( classes.isOpen );\n\t\t\t\tthis.elements.$content.show();\n\t\t\t}\n\n\t\t\treactivate() {\n\t\t\t\tthis.deactivate();\n\t\t\t\tthis.activate();\n\t\t\t}\n\n\t\t\tonElementChange( settingKey ) {\n\t\t\t\tif ( - 1 !== [ 'collapsible', 'collapsible_on', 'tm_collapsible_status' ].indexOf( settingKey ) ) {\n\t\t\t\t\tthis.toggle( true );\n\t\t\t\t} // Settings that trigger a re-activation when changed.\n\t\t\t}\n\n\t\t\tbindEvents() {\n\t\t\t\tvar that            = this;\n\t\t\t\tvar elementSettings = this.getElementSettings();\n\t\t\t\tif ( 'undefined' !== typeof elementSettings.tm_collapsible && 'yes' === elementSettings.tm_collapsible ) {\n\t\t\t\t\tvar prevWindowWidth = window.innerWidth;\n\t\t\t\t\telementorFrontend.elements.$window.on( 'resize', function() {\n\t\t\t\t\t\tif ( prevWindowWidth !== window.innerWidth ) {\n\t\t\t\t\t\t\tthat.toggle();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprevWindowWidth = window.innerWidth;\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgenerateHeading() {\n\t\t\t\tvar elementSettings = this.getElementSettings(),\n\t\t\t\t    titleText       = elementSettings.tm_collapsible_title,\n\t\t\t\t    titleSize       = elementSettings.tm_collapsible_title_size;\n\n\t\t\t\tvar $heading = this.$element.children( '.tm-collapsible__title' );\n\n\t\t\t\t// Avoid duplicate while typing.\n\t\t\t\tif ( $heading.length ) {\n\t\t\t\t\t$heading.remove();\n\t\t\t\t}\n\n\t\t\t\tvar $title = $( document.createElement( titleSize ) );\n\n\t\t\t\t$title.addClass( 'tm-collapsible__title' ).removeClass( 'has-text' );\n\n\t\t\t\tif ( 'undefined' !== typeof titleText && titleText ) {\n\t\t\t\t\t$title.addClass( 'has-text' ).text( titleText );\n\t\t\t\t}\n\n\t\t\t\tthis.elements.$container.prepend( $title );\n\t\t\t}\n\n\t\t\tonInit() {\n\t\t\t\tsuper.onInit();\n\n\t\t\t\tvar elementSettings = this.getElementSettings();\n\n\t\t\t\tif ( 'undefined' !== typeof elementSettings.tm_collapsible && 'yes' === elementSettings.tm_collapsible ) {\n\t\t\t\t\tconst selectors = this.getSettings( 'selectors' );\n\n\t\t\t\t\t/**\n\t\t\t\t\t * When dom optimization is activated then\n\t\t\t\t\t * parent div.elementor-column-wrap.elementor-element-populated removed.\n\t\t\t\t\t * css class elementor-element-populated moved to children div.elementor-widget-wrap\n\t\t\t\t\t * We added it again for collapsible columns.\n\t\t\t\t\t */\n\t\t\t\t\tif ( this.getSettings( 'isDomOptimized' ) && this.$element.children( 'elementor-column-wrap' ).length <= 0 ) {\n\t\t\t\t\t\tthis.$element.children( '.elementor-widget-wrap' ).removeClass( 'elementor-element-populated' ).wrap( '<div class=\"elementor-column-wrap elementor-element-populated\">' );\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.elements            = this.elements || {};\n\t\t\t\t\tthis.elements.$container = this.findElement( selectors.container );\n\t\t\t\t\tthis.elements.$content   = this.findElement( selectors.content );\n\n\t\t\t\t\tif ( this.isEdit ) {\n\t\t\t\t\t\tthis.$element.addClass( 'elementor-column__tm-collapsible' );\n\t\t\t\t\t}\n\n\t\t\t\t\tconst settings = this.getSettings(),\n\t\t\t\t\t      classes  = this.getSettings( 'classes' );\n\n\t\t\t\t\tthis.generateHeading();\n\t\t\t\t\tthis.toggle();\n\n\t\t\t\t\tvar $heading = this.$element.find( '.tm-collapsible__title' );\n\n\t\t\t\t\t$heading.on( 'click', ( event ) => {\n\t\t\t\t\t\tif ( ! this.$element.hasClass( classes.isActive ) ) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\t\tthis.$element.toggleClass( classes.isOpen );\n\t\t\t\t\t\tthis.elements.$content.slideToggle( settings.speed );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$( window ).on( 'elementor/frontend/init', function() {\n\t\t\telementorFrontend.hooks.addAction( 'frontend/element_ready/column', ( $element ) => {\n\t\t\t\telementorFrontend.elementsHandler.addHandler( MinimogCollapsibleHandler, { $element } );\n\t\t\t} );\n\t\t} );\n\t}\n)( jQuery );\n"],"names":["$","MinimogCollapsibleHandler","elementorModules","frontend","handlers","Base","getDefaultSettings","selectors","container","content","classes","isActive","isOpen","speed","prevDevice","isDomOptimized","elementorFrontend","config","experimentalFeatures","hasOwnProperty","e_dom_optimization","getDefaultElements","toggle","refresh","elementSettings","this","getElementSettings","currentDeviceMode","getCurrentDeviceMode","activeDevices","tm_collapsible_on","indexOf","reactivate","activate","deactivate","getSettings","$element","addClass","tm_collapsible_status","hasClass","elements","$content","show","hide","removeClass","onElementChange","settingKey","bindEvents","prevWindowWidth","that","tm_collapsible","window","innerWidth","$window","on","generateHeading","titleText","tm_collapsible_title","titleSize","tm_collapsible_title_size","$heading","children","$title","length","remove","document","createElement","text","$container","prepend","onInit","super","wrap","findElement","isEdit","settings","find","event","preventDefault","toggleClass","slideToggle","hooks","addAction","elementsHandler","addHandler","jQuery"],"mappings":"AAAA,CAAA,SACWA,GACT,mBAEMC,UAAkCC,iBAAiBC,SAASC,SAASC,KAC1EC,qBACC,MAAO,CACNC,UAAW,CACVC,UAAW,yBACXC,QAAS,wBACV,EACAC,QAAS,CACRC,SAAU,yBACVC,OAAQ,sBACT,EACAC,MAAO,IACPC,WAAY,GACZC,eAAgBC,kBAAkBC,OAAOC,qBAAqBC,eAAgB,oBAAqB,GAAKH,kBAAkBC,OAAOC,qBAAqBE,kBACvJ,CACD,CAEAC,sBAIAC,OAAQC,GACP,IAAIC,EAAoBC,KAAKC,mBAAmB,EAC5CC,EAAoBX,kBAAkBY,qBAAqB,EAC3DC,EAAoBL,EAAgBM,kBAEnCN,EAAgBV,aAAea,IAC9B,CAAE,IAAME,EAAcE,QAASJ,CAAkB,EAChD,CAAA,IAASJ,EACbE,KAAKO,WAAW,EAEhBP,KAAKQ,SAAS,EAGfR,KAAKS,WAAW,GAIlBV,EAAgBV,WAAaa,CAC9B,CAEAM,WACC,IAAIT,EAAkBC,KAAKC,mBAAmB,EACxChB,EAAgBe,KAAKU,YAAa,SAAU,EAElDV,KAAKW,SAASC,SAAU3B,EAAQC,QAAS,EAEpC,SAAWa,EAAgBc,uBAAyBb,KAAKW,SAASG,SAAU7B,EAAQC,QAAS,GACjGc,KAAKe,SAASC,SAASC,KAAK,EAC5BjB,KAAKW,SAASC,SAAU3B,EAAQE,MAAO,IAEvCa,KAAKe,SAASC,SAASE,KAAK,EAC5BlB,KAAKW,SAASQ,YAAalC,EAAQE,MAAO,EAE5C,CAEAsB,aACC,IAAMxB,EAAUe,KAAKU,YAAa,SAAU,EAE5CV,KAAKW,SAASQ,YAAalC,EAAQC,QAAS,EAC5Cc,KAAKW,SAASQ,YAAalC,EAAQE,MAAO,EAC1Ca,KAAKe,SAASC,SAASC,KAAK,CAC7B,CAEAV,aACCP,KAAKS,WAAW,EAChBT,KAAKQ,SAAS,CACf,CAEAY,gBAAiBC,GACX,CAAE,IAAM,CAAE,cAAe,iBAAkB,yBAA0Bf,QAASe,CAAW,GAC7FrB,KAAKH,OAAQ,CAAA,CAAK,CAEpB,CAEAyB,aACC,IAGKC,EAHDC,EAAkBxB,KAClBD,EAAkBC,KAAKC,mBAAmB,EACzC,KAAA,IAAuBF,EAAgB0B,gBAAkB,QAAU1B,EAAgB0B,iBACnFF,EAAkBG,OAAOC,WAC7BpC,kBAAkBwB,SAASa,QAAQC,GAAI,SAAU,WAC3CN,IAAoBG,OAAOC,YAC/BH,EAAK3B,OAAO,EAEb0B,EAAkBG,OAAOC,UAC1B,CAAE,EAEJ,CAEAG,kBACC,IAAI/B,EAAkBC,KAAKC,mBAAmB,EAC1C8B,EAAkBhC,EAAgBiC,qBAClCC,EAAkBlC,EAAgBmC,0BAElCC,EAAWnC,KAAKW,SAASyB,SAAU,wBAAyB,EAO5DC,GAJCF,EAASG,QACbH,EAASI,OAAO,EAGJhE,EAAGiE,SAASC,cAAeR,CAAU,CAAE,GAEpDI,EAAOzB,SAAU,uBAAwB,EAAEO,YAAa,UAAW,EAE9D,KAAA,IAAuBY,GAAaA,GACxCM,EAAOzB,SAAU,UAAW,EAAE8B,KAAMX,CAAU,EAG/C/B,KAAKe,SAAS4B,WAAWC,QAASP,CAAO,CAC1C,CAEAQ,SACCC,MAAMD,OAAO,EAEb,IAAI9C,EAAkBC,KAAKC,mBAAmB,EAE9C,GAAK,KAAA,IAAuBF,EAAgB0B,gBAAkB,QAAU1B,EAAgB0B,eAAiB,CAClG3C,EAAYkB,KAAKU,YAAa,WAAY,EAQ3CV,KAAKU,YAAa,gBAAiB,GAAKV,KAAKW,SAASyB,SAAU,uBAAwB,EAAEE,QAAU,GACxGtC,KAAKW,SAASyB,SAAU,wBAAyB,EAAEjB,YAAa,6BAA8B,EAAE4B,KAAM,iEAAkE,EAGzK/C,KAAKe,SAAsBf,KAAKe,UAAY,GAC5Cf,KAAKe,SAAS4B,WAAa3C,KAAKgD,YAAalE,EAAUC,SAAU,EACjEiB,KAAKe,SAASC,SAAahB,KAAKgD,YAAalE,EAAUE,OAAQ,EAE1DgB,KAAKiD,QACTjD,KAAKW,SAASC,SAAU,kCAAmC,EAG5D,MAAMsC,EAAWlD,KAAKU,YAAY,EAC5BzB,EAAWe,KAAKU,YAAa,SAAU,EAE7CV,KAAK8B,gBAAgB,EACrB9B,KAAKH,OAAO,EAEGG,KAAKW,SAASwC,KAAM,wBAAyB,EAEnDtB,GAAI,QAAS,IACrB,GAAK,CAAE7B,KAAKW,SAASG,SAAU7B,EAAQC,QAAS,EAC/C,MAAO,CAAA,EAGRkE,EAAMC,eAAe,EAErBrD,KAAKW,SAAS2C,YAAarE,EAAQE,MAAO,EAC1Ca,KAAKe,SAASC,SAASuC,YAAaL,EAAS9D,KAAM,CACpD,CAAE,CACH,CACD,CACD,CAEAb,EAAGmD,MAAO,EAAEG,GAAI,0BAA2B,WAC1CtC,kBAAkBiE,MAAMC,UAAW,gCAAiC,IACnElE,kBAAkBmE,gBAAgBC,WAAYnF,EAA2B,CAAEmC,SAAAA,CAAS,CAAE,CACvF,CAAE,CACH,CAAE,CAEJ,EAAGiD,MAAO"}