<?php

/**
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Events
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
namespace ShopMagicTwilioVendor\Twilio\Rest\Events;

use ShopMagicTwilioVendor\Twilio\Domain;
use ShopMagicTwilioVendor\Twilio\Exceptions\TwilioException;
use ShopMagicTwilioVendor\Twilio\InstanceContext;
use ShopMagicTwilioVendor\Twilio\Rest\Events\V1\EventTypeList;
use ShopMagicTwilioVendor\Twilio\Rest\Events\V1\SchemaList;
use ShopMagicTwilioVendor\Twilio\Rest\Events\V1\SinkList;
use ShopMagicTwilioVendor\Twilio\Rest\Events\V1\SubscriptionList;
use ShopMagicTwilioVendor\Twilio\Version;
/**
 * @property EventTypeList $eventTypes
 * @property SchemaList $schemas
 * @property SinkList $sinks
 * @property SubscriptionList $subscriptions
 * @method \Twilio\Rest\Events\V1\EventTypeContext eventTypes(string $type)
 * @method \Twilio\Rest\Events\V1\SchemaContext schemas(string $id)
 * @method \Twilio\Rest\Events\V1\SinkContext sinks(string $sid)
 * @method \Twilio\Rest\Events\V1\SubscriptionContext subscriptions(string $sid)
 */
class V1 extends \ShopMagicTwilioVendor\Twilio\Version
{
    protected $_eventTypes;
    protected $_schemas;
    protected $_sinks;
    protected $_subscriptions;
    /**
     * Construct the V1 version of Events
     *
     * @param Domain $domain Domain that contains the version
     */
    public function __construct(\ShopMagicTwilioVendor\Twilio\Domain $domain)
    {
        parent::__construct($domain);
        $this->version = 'v1';
    }
    protected function getEventTypes() : \ShopMagicTwilioVendor\Twilio\Rest\Events\V1\EventTypeList
    {
        if (!$this->_eventTypes) {
            $this->_eventTypes = new \ShopMagicTwilioVendor\Twilio\Rest\Events\V1\EventTypeList($this);
        }
        return $this->_eventTypes;
    }
    protected function getSchemas() : \ShopMagicTwilioVendor\Twilio\Rest\Events\V1\SchemaList
    {
        if (!$this->_schemas) {
            $this->_schemas = new \ShopMagicTwilioVendor\Twilio\Rest\Events\V1\SchemaList($this);
        }
        return $this->_schemas;
    }
    protected function getSinks() : \ShopMagicTwilioVendor\Twilio\Rest\Events\V1\SinkList
    {
        if (!$this->_sinks) {
            $this->_sinks = new \ShopMagicTwilioVendor\Twilio\Rest\Events\V1\SinkList($this);
        }
        return $this->_sinks;
    }
    protected function getSubscriptions() : \ShopMagicTwilioVendor\Twilio\Rest\Events\V1\SubscriptionList
    {
        if (!$this->_subscriptions) {
            $this->_subscriptions = new \ShopMagicTwilioVendor\Twilio\Rest\Events\V1\SubscriptionList($this);
        }
        return $this->_subscriptions;
    }
    /**
     * Magic getter to lazy load root resources
     *
     * @param string $name Resource to return
     * @return \Twilio\ListResource The requested resource
     * @throws TwilioException For unknown resource
     */
    public function __get(string $name)
    {
        $method = 'get' . \ucfirst($name);
        if (\method_exists($this, $method)) {
            return $this->{$method}();
        }
        throw new \ShopMagicTwilioVendor\Twilio\Exceptions\TwilioException('Unknown resource ' . $name);
    }
    /**
     * Magic caller to get resource contexts
     *
     * @param string $name Resource to return
     * @param array $arguments Context parameters
     * @return InstanceContext The requested resource context
     * @throws TwilioException For unknown resource
     */
    public function __call(string $name, array $arguments) : \ShopMagicTwilioVendor\Twilio\InstanceContext
    {
        $property = $this->{$name};
        if (\method_exists($property, 'getContext')) {
            return \call_user_func_array(array($property, 'getContext'), $arguments);
        }
        throw new \ShopMagicTwilioVendor\Twilio\Exceptions\TwilioException('Resource does not have a context');
    }
    /**
     * Provide a friendly representation
     *
     * @return string Machine friendly representation
     */
    public function __toString() : string
    {
        return '[Twilio.Events.V1]';
    }
}
