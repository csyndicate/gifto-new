<?php

/**
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Messaging
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
namespace ShopMagicTwilioVendor\Twilio\Rest\Messaging;

use ShopMagicTwilioVendor\Twilio\Domain;
use ShopMagicTwilioVendor\Twilio\Exceptions\TwilioException;
use ShopMagicTwilioVendor\Twilio\InstanceContext;
use ShopMagicTwilioVendor\Twilio\Rest\Messaging\V1\BrandRegistrationList;
use ShopMagicTwilioVendor\Twilio\Rest\Messaging\V1\DeactivationsList;
use ShopMagicTwilioVendor\Twilio\Rest\Messaging\V1\DomainCertsList;
use ShopMagicTwilioVendor\Twilio\Rest\Messaging\V1\DomainConfigList;
use ShopMagicTwilioVendor\Twilio\Rest\Messaging\V1\DomainConfigMessagingServiceList;
use ShopMagicTwilioVendor\Twilio\Rest\Messaging\V1\ExternalCampaignList;
use ShopMagicTwilioVendor\Twilio\Rest\Messaging\V1\LinkshorteningMessagingServiceList;
use ShopMagicTwilioVendor\Twilio\Rest\Messaging\V1\LinkshorteningMessagingServiceDomainAssociationList;
use ShopMagicTwilioVendor\Twilio\Rest\Messaging\V1\ServiceList;
use ShopMagicTwilioVendor\Twilio\Rest\Messaging\V1\TollfreeVerificationList;
use ShopMagicTwilioVendor\Twilio\Rest\Messaging\V1\UsecaseList;
use ShopMagicTwilioVendor\Twilio\Version;
/**
 * @property BrandRegistrationList $brandRegistrations
 * @property DeactivationsList $deactivations
 * @property DomainCertsList $domainCerts
 * @property DomainConfigList $domainConfig
 * @property DomainConfigMessagingServiceList $domainConfigMessagingService
 * @property ExternalCampaignList $externalCampaign
 * @property LinkshorteningMessagingServiceList $linkshorteningMessagingService
 * @property LinkshorteningMessagingServiceDomainAssociationList $linkshorteningMessagingServiceDomainAssociation
 * @property ServiceList $services
 * @property TollfreeVerificationList $tollfreeVerifications
 * @property UsecaseList $usecases
 * @method \Twilio\Rest\Messaging\V1\BrandRegistrationContext brandRegistrations(string $sid)
 * @method \Twilio\Rest\Messaging\V1\LinkshorteningMessagingServiceContext linkshorteningMessagingService(string $domainSid, string $messagingServiceSid)
 * @method \Twilio\Rest\Messaging\V1\ServiceContext services(string $sid)
 * @method \Twilio\Rest\Messaging\V1\TollfreeVerificationContext tollfreeVerifications(string $sid)
 */
class V1 extends \ShopMagicTwilioVendor\Twilio\Version
{
    protected $_brandRegistrations;
    protected $_deactivations;
    protected $_domainCerts;
    protected $_domainConfig;
    protected $_domainConfigMessagingService;
    protected $_externalCampaign;
    protected $_linkshorteningMessagingService;
    protected $_linkshorteningMessagingServiceDomainAssociation;
    protected $_services;
    protected $_tollfreeVerifications;
    protected $_usecases;
    /**
     * Construct the V1 version of Messaging
     *
     * @param Domain $domain Domain that contains the version
     */
    public function __construct(\ShopMagicTwilioVendor\Twilio\Domain $domain)
    {
        parent::__construct($domain);
        $this->version = 'v1';
    }
    protected function getBrandRegistrations() : \ShopMagicTwilioVendor\Twilio\Rest\Messaging\V1\BrandRegistrationList
    {
        if (!$this->_brandRegistrations) {
            $this->_brandRegistrations = new \ShopMagicTwilioVendor\Twilio\Rest\Messaging\V1\BrandRegistrationList($this);
        }
        return $this->_brandRegistrations;
    }
    protected function getDeactivations() : \ShopMagicTwilioVendor\Twilio\Rest\Messaging\V1\DeactivationsList
    {
        if (!$this->_deactivations) {
            $this->_deactivations = new \ShopMagicTwilioVendor\Twilio\Rest\Messaging\V1\DeactivationsList($this);
        }
        return $this->_deactivations;
    }
    protected function getDomainCerts() : \ShopMagicTwilioVendor\Twilio\Rest\Messaging\V1\DomainCertsList
    {
        if (!$this->_domainCerts) {
            $this->_domainCerts = new \ShopMagicTwilioVendor\Twilio\Rest\Messaging\V1\DomainCertsList($this);
        }
        return $this->_domainCerts;
    }
    protected function getDomainConfig() : \ShopMagicTwilioVendor\Twilio\Rest\Messaging\V1\DomainConfigList
    {
        if (!$this->_domainConfig) {
            $this->_domainConfig = new \ShopMagicTwilioVendor\Twilio\Rest\Messaging\V1\DomainConfigList($this);
        }
        return $this->_domainConfig;
    }
    protected function getDomainConfigMessagingService() : \ShopMagicTwilioVendor\Twilio\Rest\Messaging\V1\DomainConfigMessagingServiceList
    {
        if (!$this->_domainConfigMessagingService) {
            $this->_domainConfigMessagingService = new \ShopMagicTwilioVendor\Twilio\Rest\Messaging\V1\DomainConfigMessagingServiceList($this);
        }
        return $this->_domainConfigMessagingService;
    }
    protected function getExternalCampaign() : \ShopMagicTwilioVendor\Twilio\Rest\Messaging\V1\ExternalCampaignList
    {
        if (!$this->_externalCampaign) {
            $this->_externalCampaign = new \ShopMagicTwilioVendor\Twilio\Rest\Messaging\V1\ExternalCampaignList($this);
        }
        return $this->_externalCampaign;
    }
    protected function getLinkshorteningMessagingService() : \ShopMagicTwilioVendor\Twilio\Rest\Messaging\V1\LinkshorteningMessagingServiceList
    {
        if (!$this->_linkshorteningMessagingService) {
            $this->_linkshorteningMessagingService = new \ShopMagicTwilioVendor\Twilio\Rest\Messaging\V1\LinkshorteningMessagingServiceList($this);
        }
        return $this->_linkshorteningMessagingService;
    }
    protected function getLinkshorteningMessagingServiceDomainAssociation() : \ShopMagicTwilioVendor\Twilio\Rest\Messaging\V1\LinkshorteningMessagingServiceDomainAssociationList
    {
        if (!$this->_linkshorteningMessagingServiceDomainAssociation) {
            $this->_linkshorteningMessagingServiceDomainAssociation = new \ShopMagicTwilioVendor\Twilio\Rest\Messaging\V1\LinkshorteningMessagingServiceDomainAssociationList($this);
        }
        return $this->_linkshorteningMessagingServiceDomainAssociation;
    }
    protected function getServices() : \ShopMagicTwilioVendor\Twilio\Rest\Messaging\V1\ServiceList
    {
        if (!$this->_services) {
            $this->_services = new \ShopMagicTwilioVendor\Twilio\Rest\Messaging\V1\ServiceList($this);
        }
        return $this->_services;
    }
    protected function getTollfreeVerifications() : \ShopMagicTwilioVendor\Twilio\Rest\Messaging\V1\TollfreeVerificationList
    {
        if (!$this->_tollfreeVerifications) {
            $this->_tollfreeVerifications = new \ShopMagicTwilioVendor\Twilio\Rest\Messaging\V1\TollfreeVerificationList($this);
        }
        return $this->_tollfreeVerifications;
    }
    protected function getUsecases() : \ShopMagicTwilioVendor\Twilio\Rest\Messaging\V1\UsecaseList
    {
        if (!$this->_usecases) {
            $this->_usecases = new \ShopMagicTwilioVendor\Twilio\Rest\Messaging\V1\UsecaseList($this);
        }
        return $this->_usecases;
    }
    /**
     * Magic getter to lazy load root resources
     *
     * @param string $name Resource to return
     * @return \Twilio\ListResource The requested resource
     * @throws TwilioException For unknown resource
     */
    public function __get(string $name)
    {
        $method = 'get' . \ucfirst($name);
        if (\method_exists($this, $method)) {
            return $this->{$method}();
        }
        throw new \ShopMagicTwilioVendor\Twilio\Exceptions\TwilioException('Unknown resource ' . $name);
    }
    /**
     * Magic caller to get resource contexts
     *
     * @param string $name Resource to return
     * @param array $arguments Context parameters
     * @return InstanceContext The requested resource context
     * @throws TwilioException For unknown resource
     */
    public function __call(string $name, array $arguments) : \ShopMagicTwilioVendor\Twilio\InstanceContext
    {
        $property = $this->{$name};
        if (\method_exists($property, 'getContext')) {
            return \call_user_func_array(array($property, 'getContext'), $arguments);
        }
        throw new \ShopMagicTwilioVendor\Twilio\Exceptions\TwilioException('Resource does not have a context');
    }
    /**
     * Provide a friendly representation
     *
     * @return string Machine friendly representation
     */
    public function __toString() : string
    {
        return '[Twilio.Messaging.V1]';
    }
}
