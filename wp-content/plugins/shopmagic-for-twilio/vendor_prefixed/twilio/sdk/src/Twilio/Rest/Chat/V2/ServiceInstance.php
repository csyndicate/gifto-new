<?php

/**
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Chat
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
namespace ShopMagicTwilioVendor\Twilio\Rest\Chat\V2;

use ShopMagicTwilioVendor\Twilio\Exceptions\TwilioException;
use ShopMagicTwilioVendor\Twilio\InstanceResource;
use ShopMagicTwilioVendor\Twilio\Options;
use ShopMagicTwilioVendor\Twilio\Values;
use ShopMagicTwilioVendor\Twilio\Version;
use ShopMagicTwilioVendor\Twilio\Deserialize;
use ShopMagicTwilioVendor\Twilio\Rest\Chat\V2\Service\ChannelList;
use ShopMagicTwilioVendor\Twilio\Rest\Chat\V2\Service\BindingList;
use ShopMagicTwilioVendor\Twilio\Rest\Chat\V2\Service\RoleList;
use ShopMagicTwilioVendor\Twilio\Rest\Chat\V2\Service\UserList;
/**
 * @property string|null $sid
 * @property string|null $accountSid
 * @property string|null $friendlyName
 * @property \DateTime|null $dateCreated
 * @property \DateTime|null $dateUpdated
 * @property string|null $defaultServiceRoleSid
 * @property string|null $defaultChannelRoleSid
 * @property string|null $defaultChannelCreatorRoleSid
 * @property bool|null $readStatusEnabled
 * @property bool|null $reachabilityEnabled
 * @property int|null $typingIndicatorTimeout
 * @property int|null $consumptionReportInterval
 * @property array|null $limits
 * @property string|null $preWebhookUrl
 * @property string|null $postWebhookUrl
 * @property string|null $webhookMethod
 * @property string[]|null $webhookFilters
 * @property int|null $preWebhookRetryCount
 * @property int|null $postWebhookRetryCount
 * @property array|null $notifications
 * @property array|null $media
 * @property string|null $url
 * @property array|null $links
 */
class ServiceInstance extends \ShopMagicTwilioVendor\Twilio\InstanceResource
{
    protected $_channels;
    protected $_bindings;
    protected $_roles;
    protected $_users;
    /**
     * Initialize the ServiceInstance
     *
     * @param Version $version Version that contains the resource
     * @param mixed[] $payload The response payload
     * @param string $sid The SID of the Service resource to delete.
     */
    public function __construct(\ShopMagicTwilioVendor\Twilio\Version $version, array $payload, string $sid = null)
    {
        parent::__construct($version);
        // Marshaled Properties
        $this->properties = ['sid' => \ShopMagicTwilioVendor\Twilio\Values::array_get($payload, 'sid'), 'accountSid' => \ShopMagicTwilioVendor\Twilio\Values::array_get($payload, 'account_sid'), 'friendlyName' => \ShopMagicTwilioVendor\Twilio\Values::array_get($payload, 'friendly_name'), 'dateCreated' => \ShopMagicTwilioVendor\Twilio\Deserialize::dateTime(\ShopMagicTwilioVendor\Twilio\Values::array_get($payload, 'date_created')), 'dateUpdated' => \ShopMagicTwilioVendor\Twilio\Deserialize::dateTime(\ShopMagicTwilioVendor\Twilio\Values::array_get($payload, 'date_updated')), 'defaultServiceRoleSid' => \ShopMagicTwilioVendor\Twilio\Values::array_get($payload, 'default_service_role_sid'), 'defaultChannelRoleSid' => \ShopMagicTwilioVendor\Twilio\Values::array_get($payload, 'default_channel_role_sid'), 'defaultChannelCreatorRoleSid' => \ShopMagicTwilioVendor\Twilio\Values::array_get($payload, 'default_channel_creator_role_sid'), 'readStatusEnabled' => \ShopMagicTwilioVendor\Twilio\Values::array_get($payload, 'read_status_enabled'), 'reachabilityEnabled' => \ShopMagicTwilioVendor\Twilio\Values::array_get($payload, 'reachability_enabled'), 'typingIndicatorTimeout' => \ShopMagicTwilioVendor\Twilio\Values::array_get($payload, 'typing_indicator_timeout'), 'consumptionReportInterval' => \ShopMagicTwilioVendor\Twilio\Values::array_get($payload, 'consumption_report_interval'), 'limits' => \ShopMagicTwilioVendor\Twilio\Values::array_get($payload, 'limits'), 'preWebhookUrl' => \ShopMagicTwilioVendor\Twilio\Values::array_get($payload, 'pre_webhook_url'), 'postWebhookUrl' => \ShopMagicTwilioVendor\Twilio\Values::array_get($payload, 'post_webhook_url'), 'webhookMethod' => \ShopMagicTwilioVendor\Twilio\Values::array_get($payload, 'webhook_method'), 'webhookFilters' => \ShopMagicTwilioVendor\Twilio\Values::array_get($payload, 'webhook_filters'), 'preWebhookRetryCount' => \ShopMagicTwilioVendor\Twilio\Values::array_get($payload, 'pre_webhook_retry_count'), 'postWebhookRetryCount' => \ShopMagicTwilioVendor\Twilio\Values::array_get($payload, 'post_webhook_retry_count'), 'notifications' => \ShopMagicTwilioVendor\Twilio\Values::array_get($payload, 'notifications'), 'media' => \ShopMagicTwilioVendor\Twilio\Values::array_get($payload, 'media'), 'url' => \ShopMagicTwilioVendor\Twilio\Values::array_get($payload, 'url'), 'links' => \ShopMagicTwilioVendor\Twilio\Values::array_get($payload, 'links')];
        $this->solution = ['sid' => $sid ?: $this->properties['sid']];
    }
    /**
     * Generate an instance context for the instance, the context is capable of
     * performing various actions.  All instance actions are proxied to the context
     *
     * @return ServiceContext Context for this ServiceInstance
     */
    protected function proxy() : \ShopMagicTwilioVendor\Twilio\Rest\Chat\V2\ServiceContext
    {
        if (!$this->context) {
            $this->context = new \ShopMagicTwilioVendor\Twilio\Rest\Chat\V2\ServiceContext($this->version, $this->solution['sid']);
        }
        return $this->context;
    }
    /**
     * Delete the ServiceInstance
     *
     * @return bool True if delete succeeds, false otherwise
     * @throws TwilioException When an HTTP error occurs.
     */
    public function delete() : bool
    {
        return $this->proxy()->delete();
    }
    /**
     * Fetch the ServiceInstance
     *
     * @return ServiceInstance Fetched ServiceInstance
     * @throws TwilioException When an HTTP error occurs.
     */
    public function fetch() : \ShopMagicTwilioVendor\Twilio\Rest\Chat\V2\ServiceInstance
    {
        return $this->proxy()->fetch();
    }
    /**
     * Update the ServiceInstance
     *
     * @param array|Options $options Optional Arguments
     * @return ServiceInstance Updated ServiceInstance
     * @throws TwilioException When an HTTP error occurs.
     */
    public function update(array $options = []) : \ShopMagicTwilioVendor\Twilio\Rest\Chat\V2\ServiceInstance
    {
        return $this->proxy()->update($options);
    }
    /**
     * Access the channels
     */
    protected function getChannels() : \ShopMagicTwilioVendor\Twilio\Rest\Chat\V2\Service\ChannelList
    {
        return $this->proxy()->channels;
    }
    /**
     * Access the bindings
     */
    protected function getBindings() : \ShopMagicTwilioVendor\Twilio\Rest\Chat\V2\Service\BindingList
    {
        return $this->proxy()->bindings;
    }
    /**
     * Access the roles
     */
    protected function getRoles() : \ShopMagicTwilioVendor\Twilio\Rest\Chat\V2\Service\RoleList
    {
        return $this->proxy()->roles;
    }
    /**
     * Access the users
     */
    protected function getUsers() : \ShopMagicTwilioVendor\Twilio\Rest\Chat\V2\Service\UserList
    {
        return $this->proxy()->users;
    }
    /**
     * Magic getter to access properties
     *
     * @param string $name Property to access
     * @return mixed The requested property
     * @throws TwilioException For unknown properties
     */
    public function __get(string $name)
    {
        if (\array_key_exists($name, $this->properties)) {
            return $this->properties[$name];
        }
        if (\property_exists($this, '_' . $name)) {
            $method = 'get' . \ucfirst($name);
            return $this->{$method}();
        }
        throw new \ShopMagicTwilioVendor\Twilio\Exceptions\TwilioException('Unknown property: ' . $name);
    }
    /**
     * Provide a friendly representation
     *
     * @return string Machine friendly representation
     */
    public function __toString() : string
    {
        $context = [];
        foreach ($this->solution as $key => $value) {
            $context[] = "{$key}={$value}";
        }
        return '[Twilio.Chat.V2.ServiceInstance ' . \implode(' ', $context) . ']';
    }
}
