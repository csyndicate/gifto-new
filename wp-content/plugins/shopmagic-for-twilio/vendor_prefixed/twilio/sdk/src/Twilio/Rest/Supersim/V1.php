<?php

/**
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Supersim
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
namespace ShopMagicTwilioVendor\Twilio\Rest\Supersim;

use ShopMagicTwilioVendor\Twilio\Domain;
use ShopMagicTwilioVendor\Twilio\Exceptions\TwilioException;
use ShopMagicTwilioVendor\Twilio\InstanceContext;
use ShopMagicTwilioVendor\Twilio\Rest\Supersim\V1\EsimProfileList;
use ShopMagicTwilioVendor\Twilio\Rest\Supersim\V1\FleetList;
use ShopMagicTwilioVendor\Twilio\Rest\Supersim\V1\IpCommandList;
use ShopMagicTwilioVendor\Twilio\Rest\Supersim\V1\NetworkList;
use ShopMagicTwilioVendor\Twilio\Rest\Supersim\V1\NetworkAccessProfileList;
use ShopMagicTwilioVendor\Twilio\Rest\Supersim\V1\SettingsUpdateList;
use ShopMagicTwilioVendor\Twilio\Rest\Supersim\V1\SimList;
use ShopMagicTwilioVendor\Twilio\Rest\Supersim\V1\SmsCommandList;
use ShopMagicTwilioVendor\Twilio\Rest\Supersim\V1\UsageRecordList;
use ShopMagicTwilioVendor\Twilio\Version;
/**
 * @property EsimProfileList $esimProfiles
 * @property FleetList $fleets
 * @property IpCommandList $ipCommands
 * @property NetworkList $networks
 * @property NetworkAccessProfileList $networkAccessProfiles
 * @property SettingsUpdateList $settingsUpdates
 * @property SimList $sims
 * @property SmsCommandList $smsCommands
 * @property UsageRecordList $usageRecords
 * @method \Twilio\Rest\Supersim\V1\EsimProfileContext esimProfiles(string $sid)
 * @method \Twilio\Rest\Supersim\V1\FleetContext fleets(string $sid)
 * @method \Twilio\Rest\Supersim\V1\IpCommandContext ipCommands(string $sid)
 * @method \Twilio\Rest\Supersim\V1\NetworkContext networks(string $sid)
 * @method \Twilio\Rest\Supersim\V1\NetworkAccessProfileContext networkAccessProfiles(string $sid)
 * @method \Twilio\Rest\Supersim\V1\SimContext sims(string $sid)
 * @method \Twilio\Rest\Supersim\V1\SmsCommandContext smsCommands(string $sid)
 */
class V1 extends \ShopMagicTwilioVendor\Twilio\Version
{
    protected $_esimProfiles;
    protected $_fleets;
    protected $_ipCommands;
    protected $_networks;
    protected $_networkAccessProfiles;
    protected $_settingsUpdates;
    protected $_sims;
    protected $_smsCommands;
    protected $_usageRecords;
    /**
     * Construct the V1 version of Supersim
     *
     * @param Domain $domain Domain that contains the version
     */
    public function __construct(\ShopMagicTwilioVendor\Twilio\Domain $domain)
    {
        parent::__construct($domain);
        $this->version = 'v1';
    }
    protected function getEsimProfiles() : \ShopMagicTwilioVendor\Twilio\Rest\Supersim\V1\EsimProfileList
    {
        if (!$this->_esimProfiles) {
            $this->_esimProfiles = new \ShopMagicTwilioVendor\Twilio\Rest\Supersim\V1\EsimProfileList($this);
        }
        return $this->_esimProfiles;
    }
    protected function getFleets() : \ShopMagicTwilioVendor\Twilio\Rest\Supersim\V1\FleetList
    {
        if (!$this->_fleets) {
            $this->_fleets = new \ShopMagicTwilioVendor\Twilio\Rest\Supersim\V1\FleetList($this);
        }
        return $this->_fleets;
    }
    protected function getIpCommands() : \ShopMagicTwilioVendor\Twilio\Rest\Supersim\V1\IpCommandList
    {
        if (!$this->_ipCommands) {
            $this->_ipCommands = new \ShopMagicTwilioVendor\Twilio\Rest\Supersim\V1\IpCommandList($this);
        }
        return $this->_ipCommands;
    }
    protected function getNetworks() : \ShopMagicTwilioVendor\Twilio\Rest\Supersim\V1\NetworkList
    {
        if (!$this->_networks) {
            $this->_networks = new \ShopMagicTwilioVendor\Twilio\Rest\Supersim\V1\NetworkList($this);
        }
        return $this->_networks;
    }
    protected function getNetworkAccessProfiles() : \ShopMagicTwilioVendor\Twilio\Rest\Supersim\V1\NetworkAccessProfileList
    {
        if (!$this->_networkAccessProfiles) {
            $this->_networkAccessProfiles = new \ShopMagicTwilioVendor\Twilio\Rest\Supersim\V1\NetworkAccessProfileList($this);
        }
        return $this->_networkAccessProfiles;
    }
    protected function getSettingsUpdates() : \ShopMagicTwilioVendor\Twilio\Rest\Supersim\V1\SettingsUpdateList
    {
        if (!$this->_settingsUpdates) {
            $this->_settingsUpdates = new \ShopMagicTwilioVendor\Twilio\Rest\Supersim\V1\SettingsUpdateList($this);
        }
        return $this->_settingsUpdates;
    }
    protected function getSims() : \ShopMagicTwilioVendor\Twilio\Rest\Supersim\V1\SimList
    {
        if (!$this->_sims) {
            $this->_sims = new \ShopMagicTwilioVendor\Twilio\Rest\Supersim\V1\SimList($this);
        }
        return $this->_sims;
    }
    protected function getSmsCommands() : \ShopMagicTwilioVendor\Twilio\Rest\Supersim\V1\SmsCommandList
    {
        if (!$this->_smsCommands) {
            $this->_smsCommands = new \ShopMagicTwilioVendor\Twilio\Rest\Supersim\V1\SmsCommandList($this);
        }
        return $this->_smsCommands;
    }
    protected function getUsageRecords() : \ShopMagicTwilioVendor\Twilio\Rest\Supersim\V1\UsageRecordList
    {
        if (!$this->_usageRecords) {
            $this->_usageRecords = new \ShopMagicTwilioVendor\Twilio\Rest\Supersim\V1\UsageRecordList($this);
        }
        return $this->_usageRecords;
    }
    /**
     * Magic getter to lazy load root resources
     *
     * @param string $name Resource to return
     * @return \Twilio\ListResource The requested resource
     * @throws TwilioException For unknown resource
     */
    public function __get(string $name)
    {
        $method = 'get' . \ucfirst($name);
        if (\method_exists($this, $method)) {
            return $this->{$method}();
        }
        throw new \ShopMagicTwilioVendor\Twilio\Exceptions\TwilioException('Unknown resource ' . $name);
    }
    /**
     * Magic caller to get resource contexts
     *
     * @param string $name Resource to return
     * @param array $arguments Context parameters
     * @return InstanceContext The requested resource context
     * @throws TwilioException For unknown resource
     */
    public function __call(string $name, array $arguments) : \ShopMagicTwilioVendor\Twilio\InstanceContext
    {
        $property = $this->{$name};
        if (\method_exists($property, 'getContext')) {
            return \call_user_func_array(array($property, 'getContext'), $arguments);
        }
        throw new \ShopMagicTwilioVendor\Twilio\Exceptions\TwilioException('Resource does not have a context');
    }
    /**
     * Provide a friendly representation
     *
     * @return string Machine friendly representation
     */
    public function __toString() : string
    {
        return '[Twilio.Supersim.V1]';
    }
}
