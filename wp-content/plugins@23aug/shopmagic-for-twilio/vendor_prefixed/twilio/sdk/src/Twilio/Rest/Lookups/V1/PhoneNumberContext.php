<?php

/**
 * This code was generated by
 * \ / _    _  _|   _  _
 * | (_)\/(_)(_|\/| |(/_  v1.0.0
 * /       /
 */
namespace ShopMagicTwilioVendor\Twilio\Rest\Lookups\V1;

use ShopMagicTwilioVendor\Twilio\Exceptions\TwilioException;
use ShopMagicTwilioVendor\Twilio\InstanceContext;
use ShopMagicTwilioVendor\Twilio\Options;
use ShopMagicTwilioVendor\Twilio\Serialize;
use ShopMagicTwilioVendor\Twilio\Values;
use ShopMagicTwilioVendor\Twilio\Version;
class PhoneNumberContext extends \ShopMagicTwilioVendor\Twilio\InstanceContext
{
    /**
     * Initialize the PhoneNumberContext
     *
     * @param \Twilio\Version $version Version that contains the resource
     * @param string $phoneNumber The phone number to fetch in E.164 format
     * @return \Twilio\Rest\Lookups\V1\PhoneNumberContext
     */
    public function __construct(\ShopMagicTwilioVendor\Twilio\Version $version, $phoneNumber)
    {
        parent::__construct($version);
        // Path Solution
        $this->solution = array('phoneNumber' => $phoneNumber);
        $this->uri = '/PhoneNumbers/' . \rawurlencode($phoneNumber) . '';
    }
    /**
     * Fetch a PhoneNumberInstance
     *
     * @param array|Options $options Optional Arguments
     * @return PhoneNumberInstance Fetched PhoneNumberInstance
     * @throws TwilioException When an HTTP error occurs.
     */
    public function fetch($options = array())
    {
        $options = new \ShopMagicTwilioVendor\Twilio\Values($options);
        $params = \ShopMagicTwilioVendor\Twilio\Values::of(array('CountryCode' => $options['countryCode'], 'Type' => \ShopMagicTwilioVendor\Twilio\Serialize::map($options['type'], function ($e) {
            return $e;
        }), 'AddOns' => \ShopMagicTwilioVendor\Twilio\Serialize::map($options['addOns'], function ($e) {
            return $e;
        })));
        $params = \array_merge($params, \ShopMagicTwilioVendor\Twilio\Serialize::prefixedCollapsibleMap($options['addOnsData'], 'AddOns'));
        $payload = $this->version->fetch('GET', $this->uri, $params);
        return new \ShopMagicTwilioVendor\Twilio\Rest\Lookups\V1\PhoneNumberInstance($this->version, $payload, $this->solution['phoneNumber']);
    }
    /**
     * Provide a friendly representation
     *
     * @return string Machine friendly representation
     */
    public function __toString()
    {
        $context = array();
        foreach ($this->solution as $key => $value) {
            $context[] = "{$key}={$value}";
        }
        return '[Twilio.Lookups.V1.PhoneNumberContext ' . \implode(' ', $context) . ']';
    }
}
