<?php

/**
 * This code was generated by
 * \ / _    _  _|   _  _
 * | (_)\/(_)(_|\/| |(/_  v1.0.0
 * /       /
 */
namespace ShopMagicTwilioVendor\Twilio\Rest\Taskrouter\V1\Workspace\TaskQueue;

use ShopMagicTwilioVendor\Twilio\Options;
use ShopMagicTwilioVendor\Twilio\Values;
abstract class TaskQueueRealTimeStatisticsOptions
{
    /**
     * @param string $taskChannel The TaskChannel for which to fetch statistics
     * @return FetchTaskQueueRealTimeStatisticsOptions Options builder
     */
    public static function fetch($taskChannel = \ShopMagicTwilioVendor\Twilio\Values::NONE)
    {
        return new \ShopMagicTwilioVendor\Twilio\Rest\Taskrouter\V1\Workspace\TaskQueue\FetchTaskQueueRealTimeStatisticsOptions($taskChannel);
    }
}
class FetchTaskQueueRealTimeStatisticsOptions extends \ShopMagicTwilioVendor\Twilio\Options
{
    /**
     * @param string $taskChannel The TaskChannel for which to fetch statistics
     */
    public function __construct($taskChannel = \ShopMagicTwilioVendor\Twilio\Values::NONE)
    {
        $this->options['taskChannel'] = $taskChannel;
    }
    /**
     * The TaskChannel for which to fetch statistics. Can be the TaskChannel's SID or its `unique_name`, such as `voice`, `sms`, or `default`.
     *
     * @param string $taskChannel The TaskChannel for which to fetch statistics
     * @return $this Fluent Builder
     */
    public function setTaskChannel($taskChannel)
    {
        $this->options['taskChannel'] = $taskChannel;
        return $this;
    }
    /**
     * Provide a friendly representation
     *
     * @return string Machine friendly representation
     */
    public function __toString()
    {
        $options = array();
        foreach ($this->options as $key => $value) {
            if ($value != \ShopMagicTwilioVendor\Twilio\Values::NONE) {
                $options[] = "{$key}={$value}";
            }
        }
        return '[Twilio.Taskrouter.V1.FetchTaskQueueRealTimeStatisticsOptions ' . \implode(' ', $options) . ']';
    }
}
