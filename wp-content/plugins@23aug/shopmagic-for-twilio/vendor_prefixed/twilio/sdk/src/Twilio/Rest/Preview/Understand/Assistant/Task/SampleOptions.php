<?php

/**
 * This code was generated by
 * \ / _    _  _|   _  _
 * | (_)\/(_)(_|\/| |(/_  v1.0.0
 * /       /
 */
namespace ShopMagicTwilioVendor\Twilio\Rest\Preview\Understand\Assistant\Task;

use ShopMagicTwilioVendor\Twilio\Options;
use ShopMagicTwilioVendor\Twilio\Values;
/**
 * PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you currently do not have developer preview access, please contact help@twilio.com.
 */
abstract class SampleOptions
{
    /**
     * @param string $language An ISO language-country string of the sample.
     * @return ReadSampleOptions Options builder
     */
    public static function read($language = \ShopMagicTwilioVendor\Twilio\Values::NONE)
    {
        return new \ShopMagicTwilioVendor\Twilio\Rest\Preview\Understand\Assistant\Task\ReadSampleOptions($language);
    }
    /**
     * @param string $sourceChannel The communication channel the sample was
     *                              captured. It can be: voice, sms, chat, alexa,
     *                              google-assistant, or slack. If not included the
     *                              value will be null
     * @return CreateSampleOptions Options builder
     */
    public static function create($sourceChannel = \ShopMagicTwilioVendor\Twilio\Values::NONE)
    {
        return new \ShopMagicTwilioVendor\Twilio\Rest\Preview\Understand\Assistant\Task\CreateSampleOptions($sourceChannel);
    }
    /**
     * @param string $language An ISO language-country string of the sample.
     * @param string $taggedText The text example of how end-users may express this
     *                           task. The sample may contain Field tag blocks.
     * @param string $sourceChannel The communication channel the sample was
     *                              captured. It can be: voice, sms, chat, alexa,
     *                              google-assistant, or slack. If not included the
     *                              value will be null
     * @return UpdateSampleOptions Options builder
     */
    public static function update($language = \ShopMagicTwilioVendor\Twilio\Values::NONE, $taggedText = \ShopMagicTwilioVendor\Twilio\Values::NONE, $sourceChannel = \ShopMagicTwilioVendor\Twilio\Values::NONE)
    {
        return new \ShopMagicTwilioVendor\Twilio\Rest\Preview\Understand\Assistant\Task\UpdateSampleOptions($language, $taggedText, $sourceChannel);
    }
}
class ReadSampleOptions extends \ShopMagicTwilioVendor\Twilio\Options
{
    /**
     * @param string $language An ISO language-country string of the sample.
     */
    public function __construct($language = \ShopMagicTwilioVendor\Twilio\Values::NONE)
    {
        $this->options['language'] = $language;
    }
    /**
     * An ISO language-country string of the sample.
     *
     * @param string $language An ISO language-country string of the sample.
     * @return $this Fluent Builder
     */
    public function setLanguage($language)
    {
        $this->options['language'] = $language;
        return $this;
    }
    /**
     * Provide a friendly representation
     *
     * @return string Machine friendly representation
     */
    public function __toString()
    {
        $options = array();
        foreach ($this->options as $key => $value) {
            if ($value != \ShopMagicTwilioVendor\Twilio\Values::NONE) {
                $options[] = "{$key}={$value}";
            }
        }
        return '[Twilio.Preview.Understand.ReadSampleOptions ' . \implode(' ', $options) . ']';
    }
}
class CreateSampleOptions extends \ShopMagicTwilioVendor\Twilio\Options
{
    /**
     * @param string $sourceChannel The communication channel the sample was
     *                              captured. It can be: voice, sms, chat, alexa,
     *                              google-assistant, or slack. If not included the
     *                              value will be null
     */
    public function __construct($sourceChannel = \ShopMagicTwilioVendor\Twilio\Values::NONE)
    {
        $this->options['sourceChannel'] = $sourceChannel;
    }
    /**
     * The communication channel the sample was captured. It can be: *voice*, *sms*, *chat*, *alexa*, *google-assistant*, or *slack*. If not included the value will be null
     *
     * @param string $sourceChannel The communication channel the sample was
     *                              captured. It can be: voice, sms, chat, alexa,
     *                              google-assistant, or slack. If not included the
     *                              value will be null
     * @return $this Fluent Builder
     */
    public function setSourceChannel($sourceChannel)
    {
        $this->options['sourceChannel'] = $sourceChannel;
        return $this;
    }
    /**
     * Provide a friendly representation
     *
     * @return string Machine friendly representation
     */
    public function __toString()
    {
        $options = array();
        foreach ($this->options as $key => $value) {
            if ($value != \ShopMagicTwilioVendor\Twilio\Values::NONE) {
                $options[] = "{$key}={$value}";
            }
        }
        return '[Twilio.Preview.Understand.CreateSampleOptions ' . \implode(' ', $options) . ']';
    }
}
class UpdateSampleOptions extends \ShopMagicTwilioVendor\Twilio\Options
{
    /**
     * @param string $language An ISO language-country string of the sample.
     * @param string $taggedText The text example of how end-users may express this
     *                           task. The sample may contain Field tag blocks.
     * @param string $sourceChannel The communication channel the sample was
     *                              captured. It can be: voice, sms, chat, alexa,
     *                              google-assistant, or slack. If not included the
     *                              value will be null
     */
    public function __construct($language = \ShopMagicTwilioVendor\Twilio\Values::NONE, $taggedText = \ShopMagicTwilioVendor\Twilio\Values::NONE, $sourceChannel = \ShopMagicTwilioVendor\Twilio\Values::NONE)
    {
        $this->options['language'] = $language;
        $this->options['taggedText'] = $taggedText;
        $this->options['sourceChannel'] = $sourceChannel;
    }
    /**
     * An ISO language-country string of the sample.
     *
     * @param string $language An ISO language-country string of the sample.
     * @return $this Fluent Builder
     */
    public function setLanguage($language)
    {
        $this->options['language'] = $language;
        return $this;
    }
    /**
     * The text example of how end-users may express this task. The sample may contain Field tag blocks.
     *
     * @param string $taggedText The text example of how end-users may express this
     *                           task. The sample may contain Field tag blocks.
     * @return $this Fluent Builder
     */
    public function setTaggedText($taggedText)
    {
        $this->options['taggedText'] = $taggedText;
        return $this;
    }
    /**
     * The communication channel the sample was captured. It can be: *voice*, *sms*, *chat*, *alexa*, *google-assistant*, or *slack*. If not included the value will be null
     *
     * @param string $sourceChannel The communication channel the sample was
     *                              captured. It can be: voice, sms, chat, alexa,
     *                              google-assistant, or slack. If not included the
     *                              value will be null
     * @return $this Fluent Builder
     */
    public function setSourceChannel($sourceChannel)
    {
        $this->options['sourceChannel'] = $sourceChannel;
        return $this;
    }
    /**
     * Provide a friendly representation
     *
     * @return string Machine friendly representation
     */
    public function __toString()
    {
        $options = array();
        foreach ($this->options as $key => $value) {
            if ($value != \ShopMagicTwilioVendor\Twilio\Values::NONE) {
                $options[] = "{$key}={$value}";
            }
        }
        return '[Twilio.Preview.Understand.UpdateSampleOptions ' . \implode(' ', $options) . ']';
    }
}
