<?php

/**
 * This code was generated by
 * \ / _    _  _|   _  _
 * | (_)\/(_)(_|\/| |(/_  v1.0.0
 * /       /
 */
namespace ShopMagicTwilioVendor\Twilio\Rest\IpMessaging\V2;

use ShopMagicTwilioVendor\Twilio\Options;
use ShopMagicTwilioVendor\Twilio\Values;
abstract class CredentialOptions
{
    /**
     * @param string $friendlyName A string to describe the resource
     * @param string $certificate [APN only] The URL encoded representation of the
     *                            certificate
     * @param string $privateKey [APN only] The URL encoded representation of the
     *                           private key
     * @param bool $sandbox [APN only] Whether to send the credential to sandbox
     *                      APNs
     * @param string $apiKey [GCM only] The API key for the project that was
     *                       obtained from the Google Developer console for your
     *                       GCM Service application credential
     * @param string $secret [FCM only] The Server key of your project from
     *                       Firebase console
     * @return CreateCredentialOptions Options builder
     */
    public static function create($friendlyName = \ShopMagicTwilioVendor\Twilio\Values::NONE, $certificate = \ShopMagicTwilioVendor\Twilio\Values::NONE, $privateKey = \ShopMagicTwilioVendor\Twilio\Values::NONE, $sandbox = \ShopMagicTwilioVendor\Twilio\Values::NONE, $apiKey = \ShopMagicTwilioVendor\Twilio\Values::NONE, $secret = \ShopMagicTwilioVendor\Twilio\Values::NONE)
    {
        return new \ShopMagicTwilioVendor\Twilio\Rest\IpMessaging\V2\CreateCredentialOptions($friendlyName, $certificate, $privateKey, $sandbox, $apiKey, $secret);
    }
    /**
     * @param string $friendlyName A string to describe the resource
     * @param string $certificate [APN only] The URL encoded representation of the
     *                            certificate
     * @param string $privateKey [APN only] The URL encoded representation of the
     *                           private key
     * @param bool $sandbox [APN only] Whether to send the credential to sandbox
     *                      APNs
     * @param string $apiKey [GCM only] The API key for the project that was
     *                       obtained from the Google Developer console for your
     *                       GCM Service application credential
     * @param string $secret [FCM only] The Server key of your project from
     *                       Firebase console
     * @return UpdateCredentialOptions Options builder
     */
    public static function update($friendlyName = \ShopMagicTwilioVendor\Twilio\Values::NONE, $certificate = \ShopMagicTwilioVendor\Twilio\Values::NONE, $privateKey = \ShopMagicTwilioVendor\Twilio\Values::NONE, $sandbox = \ShopMagicTwilioVendor\Twilio\Values::NONE, $apiKey = \ShopMagicTwilioVendor\Twilio\Values::NONE, $secret = \ShopMagicTwilioVendor\Twilio\Values::NONE)
    {
        return new \ShopMagicTwilioVendor\Twilio\Rest\IpMessaging\V2\UpdateCredentialOptions($friendlyName, $certificate, $privateKey, $sandbox, $apiKey, $secret);
    }
}
class CreateCredentialOptions extends \ShopMagicTwilioVendor\Twilio\Options
{
    /**
     * @param string $friendlyName A string to describe the resource
     * @param string $certificate [APN only] The URL encoded representation of the
     *                            certificate
     * @param string $privateKey [APN only] The URL encoded representation of the
     *                           private key
     * @param bool $sandbox [APN only] Whether to send the credential to sandbox
     *                      APNs
     * @param string $apiKey [GCM only] The API key for the project that was
     *                       obtained from the Google Developer console for your
     *                       GCM Service application credential
     * @param string $secret [FCM only] The Server key of your project from
     *                       Firebase console
     */
    public function __construct($friendlyName = \ShopMagicTwilioVendor\Twilio\Values::NONE, $certificate = \ShopMagicTwilioVendor\Twilio\Values::NONE, $privateKey = \ShopMagicTwilioVendor\Twilio\Values::NONE, $sandbox = \ShopMagicTwilioVendor\Twilio\Values::NONE, $apiKey = \ShopMagicTwilioVendor\Twilio\Values::NONE, $secret = \ShopMagicTwilioVendor\Twilio\Values::NONE)
    {
        $this->options['friendlyName'] = $friendlyName;
        $this->options['certificate'] = $certificate;
        $this->options['privateKey'] = $privateKey;
        $this->options['sandbox'] = $sandbox;
        $this->options['apiKey'] = $apiKey;
        $this->options['secret'] = $secret;
    }
    /**
     * A descriptive string that you create to describe the new resource. It can be up to 64 characters long.
     *
     * @param string $friendlyName A string to describe the resource
     * @return $this Fluent Builder
     */
    public function setFriendlyName($friendlyName)
    {
        $this->options['friendlyName'] = $friendlyName;
        return $this;
    }
    /**
    * [APN only] The URL encoded representation of the certificate. For example,
        `-----BEGIN CERTIFICATE-----
        MIIFnTCCBIWgAwIBAgIIAjy9H849+E8wDQYJKoZIhvcNAQEF.....A==
        -----END CERTIFICATE-----`
    *
    * @param string $certificate [APN only] The URL encoded representation of the
    *                            certificate
    * @return $this Fluent Builder
    */
    public function setCertificate($certificate)
    {
        $this->options['certificate'] = $certificate;
        return $this;
    }
    /**
    * [APN only] The URL encoded representation of the private key. For example,
        `-----BEGIN RSA PRIVATE KEY-----
        MIIEpQIBAAKCAQEAuyf/lNrH9ck8DmNyo3fG...
        -----END RSA PRIVATE KEY-----`
    *
    * @param string $privateKey [APN only] The URL encoded representation of the
    *                           private key
    * @return $this Fluent Builder
    */
    public function setPrivateKey($privateKey)
    {
        $this->options['privateKey'] = $privateKey;
        return $this;
    }
    /**
     * [APN only] Whether to send the credential to sandbox APNs. Can be `true` to send to sandbox APNs or `false` to send to production.
     *
     * @param bool $sandbox [APN only] Whether to send the credential to sandbox
     *                      APNs
     * @return $this Fluent Builder
     */
    public function setSandbox($sandbox)
    {
        $this->options['sandbox'] = $sandbox;
        return $this;
    }
    /**
     * [GCM only] The API key for the project that was obtained from the Google Developer console for your GCM Service application credential.
     *
     * @param string $apiKey [GCM only] The API key for the project that was
     *                       obtained from the Google Developer console for your
     *                       GCM Service application credential
     * @return $this Fluent Builder
     */
    public function setApiKey($apiKey)
    {
        $this->options['apiKey'] = $apiKey;
        return $this;
    }
    /**
     * [FCM only] The **Server key** of your project from the Firebase console, found under Settings / Cloud messaging.
     *
     * @param string $secret [FCM only] The Server key of your project from
     *                       Firebase console
     * @return $this Fluent Builder
     */
    public function setSecret($secret)
    {
        $this->options['secret'] = $secret;
        return $this;
    }
    /**
     * Provide a friendly representation
     *
     * @return string Machine friendly representation
     */
    public function __toString()
    {
        $options = array();
        foreach ($this->options as $key => $value) {
            if ($value != \ShopMagicTwilioVendor\Twilio\Values::NONE) {
                $options[] = "{$key}={$value}";
            }
        }
        return '[Twilio.IpMessaging.V2.CreateCredentialOptions ' . \implode(' ', $options) . ']';
    }
}
class UpdateCredentialOptions extends \ShopMagicTwilioVendor\Twilio\Options
{
    /**
     * @param string $friendlyName A string to describe the resource
     * @param string $certificate [APN only] The URL encoded representation of the
     *                            certificate
     * @param string $privateKey [APN only] The URL encoded representation of the
     *                           private key
     * @param bool $sandbox [APN only] Whether to send the credential to sandbox
     *                      APNs
     * @param string $apiKey [GCM only] The API key for the project that was
     *                       obtained from the Google Developer console for your
     *                       GCM Service application credential
     * @param string $secret [FCM only] The Server key of your project from
     *                       Firebase console
     */
    public function __construct($friendlyName = \ShopMagicTwilioVendor\Twilio\Values::NONE, $certificate = \ShopMagicTwilioVendor\Twilio\Values::NONE, $privateKey = \ShopMagicTwilioVendor\Twilio\Values::NONE, $sandbox = \ShopMagicTwilioVendor\Twilio\Values::NONE, $apiKey = \ShopMagicTwilioVendor\Twilio\Values::NONE, $secret = \ShopMagicTwilioVendor\Twilio\Values::NONE)
    {
        $this->options['friendlyName'] = $friendlyName;
        $this->options['certificate'] = $certificate;
        $this->options['privateKey'] = $privateKey;
        $this->options['sandbox'] = $sandbox;
        $this->options['apiKey'] = $apiKey;
        $this->options['secret'] = $secret;
    }
    /**
     * A descriptive string that you create to describe the resource. It can be up to 64 characters long.
     *
     * @param string $friendlyName A string to describe the resource
     * @return $this Fluent Builder
     */
    public function setFriendlyName($friendlyName)
    {
        $this->options['friendlyName'] = $friendlyName;
        return $this;
    }
    /**
    * [APN only] The URL encoded representation of the certificate. For example,
        `-----BEGIN CERTIFICATE-----
        MIIFnTCCBIWgAwIBAgIIAjy9H849+E8wDQYJKoZIhvcNAQEF.....A==
        -----END CERTIFICATE-----`
    *
    * @param string $certificate [APN only] The URL encoded representation of the
    *                            certificate
    * @return $this Fluent Builder
    */
    public function setCertificate($certificate)
    {
        $this->options['certificate'] = $certificate;
        return $this;
    }
    /**
    * [APN only] The URL encoded representation of the private key. For example,
        `-----BEGIN RSA PRIVATE KEY-----
        MIIEpQIBAAKCAQEAuyf/lNrH9ck8DmNyo3fG...
        -----END RSA PRIVATE KEY-----`
    *
    * @param string $privateKey [APN only] The URL encoded representation of the
    *                           private key
    * @return $this Fluent Builder
    */
    public function setPrivateKey($privateKey)
    {
        $this->options['privateKey'] = $privateKey;
        return $this;
    }
    /**
     * [APN only] Whether to send the credential to sandbox APNs. Can be `true` to send to sandbox APNs or `false` to send to production.
     *
     * @param bool $sandbox [APN only] Whether to send the credential to sandbox
     *                      APNs
     * @return $this Fluent Builder
     */
    public function setSandbox($sandbox)
    {
        $this->options['sandbox'] = $sandbox;
        return $this;
    }
    /**
     * [GCM only] The API key for the project that was obtained from the Google Developer console for your GCM Service application credential.
     *
     * @param string $apiKey [GCM only] The API key for the project that was
     *                       obtained from the Google Developer console for your
     *                       GCM Service application credential
     * @return $this Fluent Builder
     */
    public function setApiKey($apiKey)
    {
        $this->options['apiKey'] = $apiKey;
        return $this;
    }
    /**
     * [FCM only] The **Server key** of your project from the Firebase console, found under Settings / Cloud messaging.
     *
     * @param string $secret [FCM only] The Server key of your project from
     *                       Firebase console
     * @return $this Fluent Builder
     */
    public function setSecret($secret)
    {
        $this->options['secret'] = $secret;
        return $this;
    }
    /**
     * Provide a friendly representation
     *
     * @return string Machine friendly representation
     */
    public function __toString()
    {
        $options = array();
        foreach ($this->options as $key => $value) {
            if ($value != \ShopMagicTwilioVendor\Twilio\Values::NONE) {
                $options[] = "{$key}={$value}";
            }
        }
        return '[Twilio.IpMessaging.V2.UpdateCredentialOptions ' . \implode(' ', $options) . ']';
    }
}
