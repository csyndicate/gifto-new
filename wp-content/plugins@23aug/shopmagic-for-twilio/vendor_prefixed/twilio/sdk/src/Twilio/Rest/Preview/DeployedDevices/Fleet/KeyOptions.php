<?php

/**
 * This code was generated by
 * \ / _    _  _|   _  _
 * | (_)\/(_)(_|\/| |(/_  v1.0.0
 * /       /
 */
namespace ShopMagicTwilioVendor\Twilio\Rest\Preview\DeployedDevices\Fleet;

use ShopMagicTwilioVendor\Twilio\Options;
use ShopMagicTwilioVendor\Twilio\Values;
/**
 * PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you currently do not have developer preview access, please contact help@twilio.com.
 */
abstract class KeyOptions
{
    /**
     * @param string $friendlyName The human readable description for this Key.
     * @param string $deviceSid The unique identifier of a Key to be authenticated.
     * @return CreateKeyOptions Options builder
     */
    public static function create($friendlyName = \ShopMagicTwilioVendor\Twilio\Values::NONE, $deviceSid = \ShopMagicTwilioVendor\Twilio\Values::NONE)
    {
        return new \ShopMagicTwilioVendor\Twilio\Rest\Preview\DeployedDevices\Fleet\CreateKeyOptions($friendlyName, $deviceSid);
    }
    /**
     * @param string $deviceSid Find all Keys authenticating specified Device.
     * @return ReadKeyOptions Options builder
     */
    public static function read($deviceSid = \ShopMagicTwilioVendor\Twilio\Values::NONE)
    {
        return new \ShopMagicTwilioVendor\Twilio\Rest\Preview\DeployedDevices\Fleet\ReadKeyOptions($deviceSid);
    }
    /**
     * @param string $friendlyName The human readable description for this Key.
     * @param string $deviceSid The unique identifier of a Key to be authenticated.
     * @return UpdateKeyOptions Options builder
     */
    public static function update($friendlyName = \ShopMagicTwilioVendor\Twilio\Values::NONE, $deviceSid = \ShopMagicTwilioVendor\Twilio\Values::NONE)
    {
        return new \ShopMagicTwilioVendor\Twilio\Rest\Preview\DeployedDevices\Fleet\UpdateKeyOptions($friendlyName, $deviceSid);
    }
}
class CreateKeyOptions extends \ShopMagicTwilioVendor\Twilio\Options
{
    /**
     * @param string $friendlyName The human readable description for this Key.
     * @param string $deviceSid The unique identifier of a Key to be authenticated.
     */
    public function __construct($friendlyName = \ShopMagicTwilioVendor\Twilio\Values::NONE, $deviceSid = \ShopMagicTwilioVendor\Twilio\Values::NONE)
    {
        $this->options['friendlyName'] = $friendlyName;
        $this->options['deviceSid'] = $deviceSid;
    }
    /**
     * Provides a human readable descriptive text for this Key credential, up to 256 characters long.
     *
     * @param string $friendlyName The human readable description for this Key.
     * @return $this Fluent Builder
     */
    public function setFriendlyName($friendlyName)
    {
        $this->options['friendlyName'] = $friendlyName;
        return $this;
    }
    /**
     * Provides the unique string identifier of an existing Device to become authenticated with this Key credential.
     *
     * @param string $deviceSid The unique identifier of a Key to be authenticated.
     * @return $this Fluent Builder
     */
    public function setDeviceSid($deviceSid)
    {
        $this->options['deviceSid'] = $deviceSid;
        return $this;
    }
    /**
     * Provide a friendly representation
     *
     * @return string Machine friendly representation
     */
    public function __toString()
    {
        $options = array();
        foreach ($this->options as $key => $value) {
            if ($value != \ShopMagicTwilioVendor\Twilio\Values::NONE) {
                $options[] = "{$key}={$value}";
            }
        }
        return '[Twilio.Preview.DeployedDevices.CreateKeyOptions ' . \implode(' ', $options) . ']';
    }
}
class ReadKeyOptions extends \ShopMagicTwilioVendor\Twilio\Options
{
    /**
     * @param string $deviceSid Find all Keys authenticating specified Device.
     */
    public function __construct($deviceSid = \ShopMagicTwilioVendor\Twilio\Values::NONE)
    {
        $this->options['deviceSid'] = $deviceSid;
    }
    /**
     * Filters the resulting list of Keys by a unique string identifier of an authenticated Device.
     *
     * @param string $deviceSid Find all Keys authenticating specified Device.
     * @return $this Fluent Builder
     */
    public function setDeviceSid($deviceSid)
    {
        $this->options['deviceSid'] = $deviceSid;
        return $this;
    }
    /**
     * Provide a friendly representation
     *
     * @return string Machine friendly representation
     */
    public function __toString()
    {
        $options = array();
        foreach ($this->options as $key => $value) {
            if ($value != \ShopMagicTwilioVendor\Twilio\Values::NONE) {
                $options[] = "{$key}={$value}";
            }
        }
        return '[Twilio.Preview.DeployedDevices.ReadKeyOptions ' . \implode(' ', $options) . ']';
    }
}
class UpdateKeyOptions extends \ShopMagicTwilioVendor\Twilio\Options
{
    /**
     * @param string $friendlyName The human readable description for this Key.
     * @param string $deviceSid The unique identifier of a Key to be authenticated.
     */
    public function __construct($friendlyName = \ShopMagicTwilioVendor\Twilio\Values::NONE, $deviceSid = \ShopMagicTwilioVendor\Twilio\Values::NONE)
    {
        $this->options['friendlyName'] = $friendlyName;
        $this->options['deviceSid'] = $deviceSid;
    }
    /**
     * Provides a human readable descriptive text for this Key credential, up to 256 characters long.
     *
     * @param string $friendlyName The human readable description for this Key.
     * @return $this Fluent Builder
     */
    public function setFriendlyName($friendlyName)
    {
        $this->options['friendlyName'] = $friendlyName;
        return $this;
    }
    /**
     * Provides the unique string identifier of an existing Device to become authenticated with this Key credential.
     *
     * @param string $deviceSid The unique identifier of a Key to be authenticated.
     * @return $this Fluent Builder
     */
    public function setDeviceSid($deviceSid)
    {
        $this->options['deviceSid'] = $deviceSid;
        return $this;
    }
    /**
     * Provide a friendly representation
     *
     * @return string Machine friendly representation
     */
    public function __toString()
    {
        $options = array();
        foreach ($this->options as $key => $value) {
            if ($value != \ShopMagicTwilioVendor\Twilio\Values::NONE) {
                $options[] = "{$key}={$value}";
            }
        }
        return '[Twilio.Preview.DeployedDevices.UpdateKeyOptions ' . \implode(' ', $options) . ']';
    }
}
